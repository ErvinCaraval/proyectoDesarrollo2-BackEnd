name: Deploy on Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.11.0
        with:
          minikube version: 'v1.33.0'
          kubernetes version: 'v1.30.0'

      - name: Start Minikube
        run: |
          minikube delete || true
          minikube start --driver=docker

      - name: Setup kubectl
        run: minikube kubectl -- get nodes

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images
        run: |
          docker pull ervincaravaliibarra/galeria-20
          docker pull ervincaravaliibarra/bdgaleria-20

      - name: Deploy to Kubernetes
        run: |
          kubectl create namespace backend || true
          kubectl apply -f .github/manifests/configmap.yaml -n backend
          kubectl apply -f .github/manifests/db-deployment.yaml -n backend
          kubectl apply -f .github/manifests/web-deployment.yaml -n backend
          kubectl apply -f .github/manifests/web-service.yaml -n backend
          
          # Wait for deployments to be ready
          kubectl wait --for=condition=available deployment -n backend --timeout=300s --all

          echo "Kubernetes resources have been deployed successfully!"

      - name: Get deployed resources
        run: kubectl get all -n backend

      - name: Verify deployments
        run: |
          kubectl describe deployments -n backend
          kubectl logs deployment/web -n backend

      - name: Get pod logs
        run: |
          kubectl get pods -n backend
          for pod in $(kubectl get pods -n backend -o jsonpath='{.items[*].metadata.name}'); do
            echo "Logs for $pod:"
            kubectl logs $pod -n backend
          done

      - name: Port forward service
        run: |
          kubectl port-forward svc/web 8000:8000 -n backend &
          sleep 20 # Increased sleep time to ensure port forwarding is ready
          echo "Port forwarding initiated. Access the service at localhost:8000"

      - name: Verify service availability
        run: |
          curl --fail http://localhost:8000 || (echo "Service is not available on localhost:8000" && exit 1)
