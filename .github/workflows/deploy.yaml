name: Deploy to Kubernetes

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure kubectl
        uses: ghostzero/kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.11.0
        with:
          minikube_version: 'v1.33.0'
          kubernetes_version: 'v1.30.0'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Kubernetes
        run: |
          kubectl create namespace backend
          kubectl label namespace backend istio-injection=enabled
          kubectl apply -f db-deployment.yaml -n backend
          kubectl apply -f web-deployment.yaml -n backend
          kubectl apply -f configmap.yaml -n backend
          kubectl apply -f web-service.yaml -n backend

      - name: Get all resources in backend namespace
        run: kubectl get all -n backend

      - name: Get events in backend namespace
        run: kubectl get events -n backend

      - name: Describe db deployment
        run: kubectl describe deployment db -n backend

      - name: Describe web deployment
        run: kubectl describe deployment web -n backend

      - name: Describe db pods
        run: |
          db_pods=$(kubectl get pods -n backend -l app=db -o jsonpath="{.items[*].metadata.name}")
          for pod in $db_pods; do
            kubectl describe pod $pod -n backend
          done

      - name: Describe web pods
        run: |
          web_pods=$(kubectl get pods -n backend -l app=web -o jsonpath="{.items[*].metadata.name}")
          for pod in $web_pods; do
            kubectl describe pod $pod -n backend
          done
